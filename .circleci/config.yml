#
# Copyright (c) 2019, Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
#

version: 2.1

orbs:
  slack: circleci/slack@3.4.2

executors:
  daml-executor:
    docker:
      - image: cimg/openjdk:11.0-node
  mvn-executor:
    docker:
      - image: cimg/openjdk:11.0

commands:
  install_sdk:
    description: "Install Daml SDK"
    parameters:
      version:
        type: string
    steps:
      - run:
          name: Install Daml SDK
          command: |
            curl -sSL https://get.daml.com/ | sh /dev/stdin << parameters.version >>
            # idea from https://circleci.com/docs/2.0/env-vars/
            >> $BASH_ENV echo 'export PATH="$HOME/.daml/bin:$PATH"'
  install_yq:
    description: "Install yq"
    steps:
      - run:
          name: Install pipenv
          command: |
            sudo apt-get update || sudo apt-get update
            sudo apt-get install python3-pip
            pip3 install pipenv
      - run:
          name: Install yq
          command: |
            pip3 install yq
  install_prerequisites:
    description: "Install all prerequisites"
    parameters:
      daml_sdk_version:
        type: string
    steps:
      - install_sdk:
          version: << parameters.daml_sdk_version >>
      - install_yq
      - update_npm
  update_npm:
    description: "Upgrade npm to v7"
    steps:
      - run:
          name: install npm v7
          command: |
            sudo npm install -g npm@7.13.0

jobs:
  daml_test:
    parameters:
      daml_sdk_version:
        type: string
    executor: daml-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - daml-{{ checksum "daml.yaml" }}
      - install_sdk:
          version: << parameters.daml_sdk_version >>
      - run:
          name: Build Daml
          command: |
            make build-dars
      - run:
          name: Daml tests
          command: |
            make test-dars
      - save_cache:
          paths:
            - ~/.daml
          key: daml-{{ checksum "daml.yaml" }}
      - store_test_results:
          path: target/daml-test-reports
      - store_artifacts:
          path: target/daml-test-reports

  integration_test:
    parameters:
      daml_sdk_version:
        type: string
    executor: mvn-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - m2-{{ checksum "pom.xml" }}-{{ checksum "daml.yaml" }}
            - m2
      - install_sdk:
          version: << parameters.daml_sdk_version >>
      - run:
          name: Install flake8
          command: |
            sudo apt-get update || sudo apt-get update
            sudo apt-get install flake8
      - run:
          name: Python flake8
          command: |
            flake8 --max-line-length=120 $(find -name \*.py)
      - run:
          name: Integration tests
          command: |
            mvn verify
      - run:
          command: |
            echo "Moving log files so they can be stored."
            mkdir -p logs
            mv *.log logs
          when: always
      - store_artifacts:
          path: logs
      - save_cache:
          paths:
            - ~/.m2
            - ~/.daml
          key: m2-{{ checksum "pom.xml" }}-{{ checksum "daml.yaml" }}
      - store_test_results:
          path: target/failsafe-reports
      - store_artifacts:
          path: target/failsafe-reports
      - store_test_results:
          path: target/surefire-reports
      - store_artifacts:
          path: target/surefire-reports
      - run:
          command: |
            mkdir -p logs
            mv target/pmd.xml logs
          when: always
      - persist_to_workspace:
          root: target
          paths:
            - "*.jar"
            - "*.dar"
            - "lib"
            - "NOTICE"

  blackduck_check:
    parameters:
      daml_sdk_version:
        type: string
    executor: daml-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - m2-{{ checksum "pom.xml" }}-{{ checksum "daml.yaml" }}
            - m2
      - run:
          name: Install pipenv
          command: |
            sudo apt-get update || sudo apt-get update
            sudo apt-get install python3-pip
            pip3 install pipenv
      - install_sdk:
          version: << parameters.daml_sdk_version >>
      - save_cache:
          paths:
            - ~/.m2
            - ~/.daml
          key: m2-{{ checksum "pom.xml" }}-{{ checksum "daml.yaml" }}
      - run:
          name: Install Python dependencies
          working_directory: scripts
          command: |
            pipenv install --ignore-pipfile
      - run:
          name: Maven build
          command: |
            mvn clean package
      - run:
          name: Blackduck detect
          command: |
            bash <(curl -s https://raw.githubusercontent.com/DACH-NY/security-blackduck/master/synopsys-detect) \
            ci-build digitalasset_ex-healthcare-claims-processing main \
            --logging.level.com.synopsys.integration=DEBUG \
            --detect.python.path="$(which python3)" \
            --detect.pipenv.path="$(which pipenv)" \
            --detect.notices.report=true \
            --detect.timeout=3600
      - run:
          command: cp digitalasset_ex_healthcare_claims_processing_main_Black_Duck_Notices_Report.txt NOTICE
      - persist_to_workspace:
          root: .
          paths:
            - "NOTICE"

  ui_test:
    parameters:
      daml_sdk_version:
        type: string
    executor: daml-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - node-v1-{{ .Branch }}-{{ checksum "ui/package-lock.json" }}
            - node-v1-{{ .Branch }}-
            - node-v1-
      - install_prerequisites:
          daml_sdk_version: << parameters.daml_sdk_version >>
      - run:
          name: UI install dependencies
          command: |
            make build -j3
      - run:
          name: UI build
          command: |
            make daml-hub-package LEDGER_ID=some_ledger_id
      - run:
          name: Npm test
          command: |
            make -C ui test
      - save_cache:
          paths:
            - ui/node_modules
          key: node-v1-{{ .Branch }}-{{ checksum "ui/package-lock.json" }}

workflows:
  version: 2
  test:
    jobs:
      - daml_test:
          daml_sdk_version: "1.13.1"
      - integration_test:
          daml_sdk_version: "1.13.1"
      - blackduck_check:
          daml_sdk_version: "1.13.1"
          filters:
            branches:
              only:
                - /.*blackduck.*/
      - ui_test:
          daml_sdk_version: "1.13.1"
