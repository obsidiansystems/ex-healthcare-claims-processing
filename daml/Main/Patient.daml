--
-- Copyright (c) 2019, Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0
--

module Main.Patient where

import Main.Policy
import Main.Payer
import DA.Date
import Main.Types
import Main.Procedure

-- Invitation from the operator that the insurance company can accept
template PatientInvitation
  with
    operator : Party
    patient : Party
  where
    signatory operator

    controller patient can
      AcceptPatientInvitation : ContractId Patient
        with
          patientName : Text
          demographics : PatientDemographics
        do
          create Patient with
            insuranceID = None
            primaryCareProviderID = None, ..

-- Patient reference data and actions the patient can initiante in the workflow
template Patient
  with
    operator : Party
    patient : Party
    patientName : Text
    demographics : PatientDemographics
    insuranceID : Optional Text
    primaryCareProviderID : Optional Text
  where
    signatory operator
    signatory patient

    controller patient can
      nonconsuming RequestInsurancePolicy : ContractId RequestPayerForPolicy
        with
          payer : Party
          policyType : PolicyType
        do create RequestPayerForPolicy with ..

      SetInsurancePolicy : ContractId Patient
        with
          notifyCid : ContractId NotifyPatientOfPayerAcceptance
        do
          notify <- fetch notifyCid
          assert (notify.patient == patient)
          create this with insuranceID = Some notify.insuranceID

      nonconsuming RequestPrimaryCareProvider : ContractId PrimaryCareProviderRequest
        with
          primaryCareProvider : Party
        do
          create PrimaryCareProviderRequest with
            provider = primaryCareProvider, ..

      SetPrimaryCareProvider : ContractId Patient
        with
          notifyCid : ContractId NotifyPatientOfPCPAcceptance
        do
          notify <- fetch notifyCid
          assert (notify.patient == patient)
          create this with primaryCareProviderID = Some notify.providerID

-- Patient request to create an insurance policy with the insurance company
template RequestPayerForPolicy
  with
    operator : Party
    payer : Party
    patient : Party
    policyType : PolicyType
    patientName : Text
    demographics : PatientDemographics

  where

    signatory patient

    controller payer can
      AcceptMember : (ContractId InsurancePolicy, ContractId NotifyPatientOfPayerAcceptance)
        with
          payerCid : ContractId Payer
          insuranceID : Text
          undisclosedProcedureList : ProcedureMap
        do
          p <- fetch payerCid
          assert (p.payer == payer)
          procedureList <- discloseProcedureMap [patient] undisclosedProcedureList
          policyCid <- if policyType == Bronze then
            create InsurancePolicy
              with
                annualDeductible = 1000.0
                currentDeductible = 1000.0
                policyEndDate = date 2040 Dec 1
                isPolicyInGoodStanding = True, ..
          else
            if policyType == Gold then
            create InsurancePolicy with
              annualDeductible = 0.0
              currentDeductible = 0.0
              policyEndDate = date 2040 Dec 1
              isPolicyInGoodStanding = True, ..
          else
            create InsurancePolicy with
              policyType = Bronze
              annualDeductible = 1000.0
              currentDeductible = 1000.0
              policyEndDate = date 2040 Dec 1
              isPolicyInGoodStanding = True, ..

          notifyCid <- create NotifyPatientOfPayerAcceptance with ..
          return (policyCid, notifyCid)

-- Notification for the patient that the insurance company accepted their request for policy
template NotifyPatientOfPayerAcceptance
  with
    operator : Party
    payer : Party
    patient : Party
    insuranceID : Text
    policyType : PolicyType

  where
    signatory payer
    signatory patient

-- Patient's request for a primary care provider
template PrimaryCareProviderRequest
  with
    operator : Party
    patient : Party
    provider : Party
    demographics : PatientDemographics
  where
    signatory patient

    controller provider can
      AcceptPatient : ContractId NotifyPatientOfPCPAcceptance
        with
          providerID : Text
        do create NotifyPatientOfPCPAcceptance with ..

-- Notification for the patient that the primary care provider accepted their request
template NotifyPatientOfPCPAcceptance
  with
   operator : Party
   patient : Party
   provider : Party
   demographics : PatientDemographics
   providerID : Text
  where
    signatory patient, provider
